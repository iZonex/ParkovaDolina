from parkovadolina.utils.weather import get_weather_info
from parkovadolina.utils.rad import get_rad_sensor_info
from parkovadolina.utils.sensors import get_air_sensor_info
from parkovadolina.core.screen import Screen
from aiogram import types
from aiogram.types.message import ParseMode

class AirCleanScreen(Screen):

    SENSOR_ID = '4'

    def __init__(self, bot, dao):
        self.bot = bot
        self.dao = dao
        self.sections = self._build_sections()

    def _build_sections(self):
        return [types.KeyboardButton(i) for i in self.SECTIONS]

    async def screen(self, message):
        sensor_data = await get_air_sensor_info(self.SENSOR_ID)
        rad_sensor_data = await get_rad_sensor_info()
        weather_data = await get_weather_info()

        if sensor_data:
            text_body = (
                f'<b>–ó–∞ –∞–¥—Ä–µ—Å–æ—é –ö–∞–π—Å–∞—Ä–æ–≤–∞ 7/9</b>\n'
                f'–Ω–∞—Å—Ç—É–ø–Ω—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ –¥–∞—Ç—á–∏–∫—ñ–≤ —è–∫–æ—Å—Ç—ñ –ø–æ–≤—ñ—Ç—Ä—è\n\n'
                f"üå§PM2.5: {sensor_data['particles']['pm1']:.2f} –º–∫–≥/–º3\n"
                f"üå§PM10: {sensor_data['particles']['pm10']:.2f} –º–∫–≥/–º3\n"
                f"üå§PM1: {sensor_data['particles']['pm25']:.2f} –º–∫–≥/–º3\n"
                f"üí¶–í–æ–ª–æ–≥—ñ—Å—Ç—å: {sensor_data['weather']['humidity']:.0f} %\n"
                f"üå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather_data['temp']:.0f} ¬∞C\n"
                f"üíß–¢–æ—á–∫–∞ —Ä–æ—Å–∏: {weather_data['dewpt']:.0f} ¬∞C\n"
                f"üí®–í—ñ—Ç–µ—Ä: {weather_data['wind_speed']:.0f} –º/—Å\n"
                f"ü©∫–¢–∏—Å–∫: {weather_data['press']:.0f} –º–±–∞—Ä\n"
                f"‚ò¢–†–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–æ–π –§–æ–Ω: {rad_sensor_data} –º–∫–ó–≤/—á\n"
            )
        else:
            text_body = (
                f'<b>–ó–∞ –∞–¥—Ä–µ—Å–æ—é –ö–∞–π—Å–∞—Ä–æ–≤–∞ 7/9</b>\n'
                f'–î–∞—Ç—á–∏–∫–∏ —è–∫–æ—Å—Ç—ñ –ø–æ–≤—ñ—Ç—Ä—è –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ñ\n\n'
            )
        await self.bot.send_message(message.chat.id, text_body, parse_mode=ParseMode.HTML)

    @staticmethod
    def match(message):
        return message.text.startswith("üå§–ö–ª—ñ–º–∞—Ç") or False